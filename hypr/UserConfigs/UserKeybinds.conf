# /* ---- üí´ https://github.com/JaKooLit üí´ ---- */  #
# This is where you put your own keybinds. Be Mindful to check as well ~/.config/hypr/configs/Keybinds.conf to avoid conflict
# if you think I should replace the Pre-defined Keybinds in ~/.config/hypr/configs/Keybinds.conf , submit an issue or let me know in DC and present me a valid reason as to why, such as conflicting with global shortcuts, etc etc

# See https://wiki.hyprland.org/Configuring/Keywords/ for more settings and variables
# See also Laptops.conf for laptops keybinds 

# /* ---- ‚ú¥Ô∏è Variables ‚ú¥Ô∏è ---- */  #
$mainMod = SUPER
$files = thunar
$term = kitty
$scriptsDir = $HOME/.config/hypr/scripts
$UserScripts = $HOME/.config/hypr/UserScripts

#bindr = $mainMod, $mainMod_L, exec, pkill rofi || rofi -show drun -modi drun,filebrowser,run,window # Super Key to Launch rofi menu
bind = $mainMod, Space, exec, pkill rofi || true && rofi -show drun -modi drun,filebrowser,run,window # Main Menu (APP Launcher)
bind = $mainMod, Return, exec, $term  #terminal
bind = $mainMod SHIFT, Return, exec, pypr toggle term # Dropdown terminal not avail Debian and Ubuntu
bind = $mainMod, Tab, exec, hyprctl dispatch setfloating
bind = $mainMod, Tab, cyclenext  
bind = $mainMod, Tab, alterzorder, top, activewindow
bind = $mainMod, A, exec, pkill rofi || true && ags -t 'overview' # desktop overview (if installed)
bind = $mainMod, B, exec, $term --title Á≥ªÁªüËµÑÊ∫ê -e btop # Show the graphical app launcher
bind = $mainMod, C, exec, microsoft-edge-stable --enable-features=WaylandWindowDecorations --ozone-platform-hint=auto --ozone-platform=wayland --enable-wayland-ime --wayland-text-input-version=3   # default browser
bind = $mainMod, D, togglesplit # only works on dwindle layout
bind = $mainMod, E, exec, $term --title Êñá‰ª∂ÁÆ°ÁêÜ -e yazi #yaziÊñá‰ª∂ÁÆ°ÁêÜÂô®
bind = $mainMod, F, fullscreen # whole full screen
bind = $mainMod, G, togglegroup # toggle group
# Move focus with mainMod + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, J, movefocus, d
bind = $mainMod, K, movefocus, u
bind = $mainMod, L, movefocus, r
bind = $mainMod, I, exec, $term --detach --hold --title Á≥ªÁªü‰ø°ÊÅØ -e "fastfetch"  # Show the graphical app launcher
bind = $mainMod, M, exec, $scriptsDir/ToggleWindowSize.sh
bind = $mainMod, N, exec, swaync-client -t -sw # swayNC notification panel
 # Cycle windows if floating bring to top
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, Q, killactive, #kill

#submap
# will switch to a submap called resize
bind = $mainMod, R, submap, resize
# will start a submap called "resize"
submap = resize
# sets repeatable binds for resizing the active window
binde = , l, resizeactive, 10 0
binde = , h, resizeactive, -10 0
binde = , k, resizeactive, 0 -10
binde = , j, resizeactive, 0 10
binde = SHIFT, h, movewindowpixel,-10 0,active
binde = SHIFT, l, movewindowpixel,10 0,active
binde = SHIFT, k, movewindowpixel,0 -10, active
binde = SHIFT, j, movewindowpixel,0 10, active
bindr = , r, exec, pkill rofi || true && rofi -show run  # Run Command
bindr = , r, submap, reset
bind = , escape, submap, reset # use reset to go back to the global submap
submap = reset# will reset the submap, which will return to the global submap

bind = $mainMod, S, togglefloating, #Float Mode
# Special workspace
bind = $mainMod, U, togglespecialworkspace,
bind = $mainMod SHIFT, U, movetoworkspace, special

bind = $mainMod, V, exec, gnome-system-monitor

bind = $mainMod SHIFT, Q, exec, $scriptsDir/KillActiveProcess.sh # Kill active process
bind = CTRL ALT, L, exec, $scriptsDir/LockScreen.sh # screen lock
bind = CTRL ALT, DELETE, exec, $scriptsDir/Wlogout.sh # power menu
bind = $mainMod , Slash, exec, $scriptsDir/KeyBinds.sh # hep keybinds

# Dwindle Layout
# bind = $mainMod , D, exec, $scriptsDir/ChangeLayout.sh # Toggle Master or Dwindle Layout
# group
bind = $mainMod CTRL, tab, changegroupactive  # change focus to another window

bind = $mainMod ALT, H, exec, $scriptsDir/KeyHints.sh # help / cheat sheet
bind = $mainMod ALT, R, exec, $scriptsDir/Refresh.sh # Refresh waybar, swaync, rofi
bind = $mainMod ALT, E, exec, $scriptsDir/RofiEmoji.sh # emoji menu
#bind = $mainMod, g, exec, $scriptsDir/RofiSearch.sh # Google search using rofi
# bind = $mainMod, g, exec, $term --title GitÁÆ°ÁêÜ -e lazygit
bind = $mainMod ALT, O, exec, $scriptsDir/ChangeBlur.sh # Toggle blur settings 
bind = $mainMod SHIFT, G, exec, $scriptsDir/GameMode.sh # Toggle animations ON/OFF
bind = $mainMod SHIFT, V, exec, $scriptsDir/ClipManager.sh # Clipboard Manager
bind = $mainMod CTRL, R, exec, $scriptsDir/RofiThemeSelector.sh # KooL Rofi Menu Theme Selector
bind = $mainMod CTRL SHIFT, R, exec, pkill rofi || true && $scriptsDir/RofiThemeSelector-modified.sh # modified Rofi Theme Selector

bind = $mainMod Shift, F, fullscreen, 1 # fake full screen
bind = $mainMod ALT, SPACE, exec, hyprctl dispatch workspaceopt allfloat #All Float Mode

# Waybar / Bar related
bind = $mainMod CTRL ALT, B, exec, pkill -SIGUSR1 waybar # Toggle hide/show waybar 
bind = $mainMod CTRL, B, exec, $scriptsDir/WaybarStyles.sh # Waybar Styles Menu
bind = $mainMod ALT, B, exec, $scriptsDir/WaybarLayout.sh # Waybar Layout Menu

# FEATURES / EXTRAS (UserScripts)
bind = $mainMod SHIFT, E, exec, $UserScripts/Kool_Quick_Settings.sh # Settings Menu KooL Hyprland Settings
bind = $mainMod, W, exec, $UserScripts/WallpaperSelect.sh # Select wallpaper to apply
bind = $mainMod SHIFT, W, exec, $UserScripts/WallpaperEffects.sh # Wallpaper Effects by imagemagick
bind = CTRL ALT, W, exec, $UserScripts/WallpaperRandom.sh # Random wallpapers
# bind = $mainMod CTRL, O, exec, hyprctl setprop active opaque toggle # disable opacity on active window
bind = $mainMod SHIFT, A, exec, $scriptsDir/Animations.sh #hyprland animations menu
# bindln = ALT_L, SHIFT_L, exec, $scriptsDir/SwitchKeyboardLayout.sh # Change keyboard layout
bind = $mainMod ALT, C, exec, $UserScripts/RofiCalc.sh # calculator (qalculate)

# pyprland (This is not available in Debian and Ubuntu)
bind = $mainMod, Z, exec, pypr zoom # Toggle Desktop Zoom

# Move windows
bind = $mainMod SHIFT, h, swapwindow, l
bind = $mainMod SHIFT, l, swapwindow, r
bind = $mainMod SHIFT, k, swapwindow, u
bind = $mainMod SHIFT, j, swapwindow, d


# 1 is code:10, 2 is code 11, etc
# Switch workspaces with mainMod + [0-9] 
bind = $mainMod, code:10, workspace, 1 # NOTE: code:10 = key 1
bind = $mainMod, code:11, workspace, 2 # NOTE: code:11 = key 2
bind = $mainMod, code:12, workspace, 3 # NOTE: code:12 = key 3
bind = $mainMod, code:13, workspace, 4 # NOTE: code:13 = key 4
bind = $mainMod, code:14, workspace, 5 # NOTE: code:14 = key 5
bind = $mainMod, code:15, workspace, 6 # NOTE: code:15 = key 6
bind = $mainMod, code:16, workspace, 7 # NOTE: code:16 = key 7
bind = $mainMod, code:17, workspace, 8 # NOTE: code:17 = key 8
bind = $mainMod, code:18, workspace, 9 # NOTE: code:18 = key 9
bind = $mainMod, code:19, workspace, 10 # NOTE: code:19 = key 0

# Move active window and follow to workspace mainMod + SHIFT [0-9]
bind = $mainMod SHIFT, code:10, movetoworkspace, 1 # NOTE: code:10 = key 1
bind = $mainMod SHIFT, code:11, movetoworkspace, 2 # NOTE: code:11 = key 2
bind = $mainMod SHIFT, code:12, movetoworkspace, 3 # NOTE: code:12 = key 3
bind = $mainMod SHIFT, code:13, movetoworkspace, 4 # NOTE: code:13 = key 4
bind = $mainMod SHIFT, code:14, movetoworkspace, 5 # NOTE: code:14 = key 5
bind = $mainMod SHIFT, code:15, movetoworkspace, 6 # NOTE: code:15 = key 6
bind = $mainMod SHIFT, code:16, movetoworkspace, 7 # NOTE: code:16 = key 7
bind = $mainMod SHIFT, code:17, movetoworkspace, 8 # NOTE: code:17 = key 8
bind = $mainMod SHIFT, code:18, movetoworkspace, 9 # NOTE: code:18 = key 9
bind = $mainMod SHIFT, code:19, movetoworkspace, 10 # NOTE: code:19 = key 0
bind = $mainMod SHIFT, bracketleft, movetoworkspace, -1 # brackets [
bind = $mainMod SHIFT, bracketright, movetoworkspace, +1 # brackets ]

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bind = $mainMod, period, workspace, e+1
bind = $mainMod, comma, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow # NOTE: mouse:272 = left click
bindm = $mainMod, mouse:273, resizewindow # NOTE: mouse:272 = right click

bind = $mainMod, Y, exec, hyprctl dispatch tagwindow -- opaque



# Special Keys / Hot Keys
bindel = , xf86audioraisevolume, exec, $scriptsDir/Volume.sh --inc # volume up
bindel = , xf86audiolowervolume, exec, $scriptsDir/Volume.sh --dec # volume down
bindl = , xf86AudioMicMute, exec, $scriptsDir/Volume.sh --toggle-mic # mic mute
bindl = , xf86audiomute, exec, $scriptsDir/Volume.sh --toggle # mute
bindl = , xf86Sleep, exec, systemctl suspend  # sleep button 
bindl = , xf86Rfkill, exec, $scriptsDir/AirplaneMode.sh # Airplane mode

# media controls using keyboards
bindl = , xf86AudioPlayPause, exec, $scriptsDir/MediaCtrl.sh --pause
bindl = , xf86AudioPause, exec, $scriptsDir/MediaCtrl.sh --pause
bindl = , xf86AudioPlay, exec, $scriptsDir/MediaCtrl.sh --pause
bindl = , xf86AudioNext, exec, $scriptsDir/MediaCtrl.sh --nxt 
bindl = , xf86AudioPrev, exec, $scriptsDir/MediaCtrl.sh --prv
bindl = , xf86audiostop, exec, $scriptsDir/MediaCtrl.sh --stop

# Screenshot keybindings NOTE: You may need to press Fn key as well
#bind = $mainMod, Print, exec, $scriptsDir/ScreenShot.sh --now  # screenshot
# bind = $mainMod SHIFT, P, exec, $scriptsDir/ScreenShot.sh --area # screenshot (area)
#bind = $mainMod CTRL, P, exec, $scriptsDir/ScreenShot.sh --in5 # screenshot  (5 secs delay)
#bind = $mainMod CTRL SHIFT, Print, exec, $scriptsDir/ScreenShot.sh --in10 # screenshot (10 secs delay)
#bind = ALT, Print, exec, $scriptsDir/ScreenShot.sh --active # screenshot (active window only)

# screenshot with swappy (another screenshot tool)
bind = $mainMod SHIFT, S, exec, $scriptsDir/ScreenShot.sh --swappy #screenshot (swappy)


# For passthrough keyboard into a VM
# bind = $mainMod ALT, P, submap, passthru
#submap = passthru
# to unbind
#bind = $mainMod ALT, P, submap, reset
#submap = reset
